// Intro Page
#intro {
  &-skills {
    .specials-tech {
      color: $dark-color;
      margin-top: 3rem;
      display: grid;
      grid-gap: 1rem;
      grid-template-columns: repeat(3, 1fr);
      .fas,
      .fab,
      .far {
        color: $main-color;
        padding-bottom: 0.4rem;
      }
    }
  }

  &-stack {
    // color: #000;
    .grid {
      color: #fff;
      display: grid;
      grid-template-areas:
        'heading1 heading1 heading1'
        'biojs js js '
        'heading2 heading2 heading2'
        'python python biopython';
      grid-gap: 1rem;
      max-width: 800px;
      margin: auto;
    }
    // Grid Areas
    .hfront {
      grid-area: heading1;
      color: $main-color;
    }
    .biojs {
      grid-area: biojs;
    }
    .js {
      grid-area: js;
      .general {
        background: url('../../dist/img/icons/react.svg') no-repeat center
          center;
        background-size: 80%;
      }
    }
    .hdata {
      grid-area: heading2;
      color: $main-color;
    }
    .biopython {
      grid-area: biopython;
    }
    .python {
      grid-area: python;
      .general {
        background: url('../../dist/img/icons/python.svg') no-repeat center
          center;
      }
    }
    .biojs,
    .biopython {
      border-radius: 10px;
      max-width: 100%;
      padding: 30px;
      background-image: linear-gradient(
        to left,
        #781d42,
        #812341,
        #8a2941,
        #92303f,
        #9a373e,
        #a64741,
        #b05645,
        #ba6649
      );
      box-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);
      img {
        height: 300px;
        width: 300px;
        max-width: 100%;
      }
    }
    .js,
    .python {
      $wrap_size: 300px;
      $item_size: 60px;
      $num_of_items: 4;
      padding: 1rem;
      cursor: pointer;

      .general {
        width: $wrap_size;
        height: $wrap_size;
        position: relative;
        top: 50%;
        left: 50%;
        translate: -50% -50%;
        div {
          opacity: 0;
          width: $item_size;
          height: $item_size;
          text-align: center;
          display: block;
          position: absolute;
          top: 0;
          left: 0;
          transform-origin: ($wrap_size / 2) ($wrap_size / 2);

          @for $i from 1 through $num_of_items {
            $deg: 360 / $num_of_items * ($i - 1);
            $rotation: $deg * 1deg;
            &:nth-child(#{$i}) {
              transform: rotateZ($rotation);
              img {
                transform: rotateZ(-$rotation);
              }
            }
          }
        }
      }
    }
    .js:hover,
    .python:hover {
      .general {
        div {
          opacity: 1;
        }
      }
    }
  }

  &-process {
    color: $dark-color;
    .process {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      grid-gap: 1.5rem;
      text-align: center;
      // process-step class
      &-step {
        position: absolute;
        top: 0;
        right: 0;
        font-size: 28px;
        background: $main-color;
        color: set-text-color($main-color);
        border-radius: 50%;
        height: 15px;
        width: 15px;
        line-height: 15px;
        padding: 1rem;
        transition: all 1s;
      }
      // process-icon class
      &-icon {
        border-radius: 50%;
        background: $dark-color;
        color: set-text-color($dark-color);
        padding: 2rem;
        width: 70px;
        height: 70px;
        line-height: 70px;
        text-align: center;
        position: relative;
        transition: all 1s;
        &:before {
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          transition: all 1s;
        }
        &:hover {
          background: $main-color;
          width: 90px;
          height: 90px;
          line-height: 90px;
          .process-step {
            background: $dark-color;
            color: set-text-color($dark-color);
          }
        }
      }
    }
  }

  &-links {
    display: flex;
    flex-direction: column;
    justify-content: center;
    color: $dark-color;
    div {
      :not(:last-child) {
        margin-right: 1rem;
      }
    }
  }
}
